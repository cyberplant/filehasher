name: CI

on:
  push:
    branches: [ main, master, improvements ]
  pull_request:
    branches: [ main, master, improvements ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest

      - name: Install package in development mode
        run: |
          pip install -e .

      - name: Test basic functionality
        run: |
          # Test help command
          python -m filehasher --help
          filehasher --help

          # Test basic commands
          mkdir -p test_dir
          echo "test content" > test_dir/test.txt
          cd test_dir
          filehasher --generate --quiet
          ls -la .hashes
          filehasher --benchmark --quiet
          cd ..

      - name: Test parallel processing
        run: |
          cd test_dir
          filehasher --generate --parallel --workers 2 --quiet
          filehasher --generate --parallel --verbose --algorithm sha256 --quiet
          cd ..

      - name: Test different algorithms
        run: |
          cd test_dir
          for algo in md5 sha1 sha256 sha512 blake2b blake2s; do
            echo "Testing $algo..."
            filehasher --generate --algorithm $algo --quiet
          done
          cd ..

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Run linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 filehasher --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 filehasher --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
